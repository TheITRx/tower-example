---
- name: restart services
  hosts: all
  gather_facts: yes
  vars:
   svc_name: spooler
   svc_names:
   - spooler
   - wuauserv
   - vss

  tasks:
  # trying loops
  - name: trying loops - restart services
    ansible.windows.win_service:
     name: "{{ item }}"
     state: restarted
    loop: "{{ svc_names }}"

  # trying when
  - name: trying when
    ansible.windows.win_service:
     name: spooler
    register: spooler_status

  - debug: msg="{{ spooler_status }}"

  - name: stopped when spooler is running
    ansible.windows.win_service:
     name: spooler
     state: stopped
    when: spooler_status.state == 'running'
  # end of trying when

  # trying blocks

  - name: try blocks
    blocks:
    
      - name: fail restart a service
        ansible.windows.win_service
          name: spoolerssss
          state: restarted

    resue:
      - name: restart actually the spooler
        ansible.windows.win_service:
          name: spooler
          state: restarted
    always:
      - name: zuup
        msg: wazzup dawg


  # end of trying blocks

  - name: will use this for handlers
    ansible.windows.win_service:
      name: spooler
      state: restarted
    notify: write to file
  # trying handlers

  handlers:
  - name: write to file
    ansible.windows.win_shell: |
      $result = get-service spooler | convertTO-json -depth 2
      $result | out-file c:\temp\ah.json
      $result


